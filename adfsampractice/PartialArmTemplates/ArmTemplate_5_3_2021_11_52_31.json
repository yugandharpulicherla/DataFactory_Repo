{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfsampractice"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copyDataFromOnPremSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySqlTables",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TableLookup",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceSqlTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TargetCsvFile",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TableName, '_',formatDateTime(utcnow(),'yyyyMMdd')  ,'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "TableLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select sc.name as SchemaName , tb.name as TableName from sys.schemas sc inner join sys.tables tb on sc.schema_id=tb.schema_id where tb.schema_id=7 and tb.name in ('ProductCategory','ProductDescription')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TableList",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "TableLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('TableLookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyTablesData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceSqlTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"SchemaName": {
													"value": "@item().SchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TargetCsvFile",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().TableName,'_', formatDateTime(utcnow(),'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "create_CSV_Log_File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CopyTablesData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT '@{pipeline().DataFactory}' as DataFactory_Name,\n'@{pipeline().Pipeline}' as Pipeline_Name,\n'@{pipeline().RunId}' as RunId,\n'@{pipeline().TriggerId}' as TriggerId,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{activity('CopyTablesData').output.rowsCopied}' as rowsCopied,\n'@{activity('CopyTablesData').output.rowsRead}' as RowsRead,\n'@{activity('CopyTablesData').output.usedParallelCopies}' as No_ParallelCopies,\n'@{activity('CopyTablesData').output.copyDuration}' as copyDuration_in_secs,\n'@{activity('CopyTablesData').output.effectiveIntegrationRuntime}' as effectiveIntegrationRuntime,\n'@{activity('CopyTablesData').output.executionDetails[0].source.type}' as Source_Type,\n'@{activity('CopyTablesData').output.executionDetails[0].sink.type}' as Sink_Type,\n'@{activity('CopyTablesData').output.executionDetails[0].status}' as Execution_Status,\n'@{activity('CopyTablesData').output.executionDetails[0].start}' as CopyActivity_Start_Time,\n'@{utcnow()}' as CopyActivity_End_Time,\n'@{activity('CopyTablesData').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_queuingDuration_in_secs,\n'@{activity('CopyTablesData').output.executionDetails[0].detailedDurations.timeToFirstByte}' as CopyActivity_timeToFirstByte_in_secs,\n'@{activity('CopyTablesData').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_transferDuration_in_secs",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OnPremSqlTestDB",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "TargetCsvFile",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(pipeline().Pipeline,'_','Log_',formatDateTime(utcnow(),'yyyyMMdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "Product"
					},
					"SchemaName": {
						"type": "string",
						"defaultValue": "Production"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-05-02T17:48:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheduleTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copyDataFromOnPremSql",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 15,
						"startTime": "2021-04-30T05:01:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								1
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copyDataFromOnPremSql')]"
			]
		}
	]
}